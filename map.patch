Subject: [PATCH] map
---
Index: src/game_objects.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/game_objects.js b/src/game_objects.js
--- a/src/game_objects.js	(revision a75d9e48fc1cccb1e4ffea5698c645a9b6e53786)
+++ b/src/game_objects.js	(date 1682869238413)
@@ -168,6 +168,20 @@
   }
 }
 
+export class DummyCave extends GameObject {
+  constructor(x, y) {
+    const ground = document.querySelector("#ground")
+    super(x, y, {
+      sheet: ground,
+      layer: "world",
+      collisionTags: ["world"]
+
+    })
+    this.row = 1
+    this.col = 2
+  }
+}
+
 
 export class FallingStone extends Stone {
   constructor(x, y) {
Index: src/event_handler.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/event_handler.js b/src/event_handler.js
--- a/src/event_handler.js	(revision a75d9e48fc1cccb1e4ffea5698c645a9b6e53786)
+++ b/src/event_handler.js	(date 1682869151082)
@@ -135,11 +135,8 @@
     }
 
     if (collidingObject.collisionTags.includes("cave")) {
-      if (collidingObject.level === 1) {
-        Game.loadMap("maps/map-01.txt")
-      } else if (collidingObject.level === 2) {
-        Game.loadMap ("maps/map-02.txt")
-    }
+      let level = collidingObject.level;
+      Game.loadMap(level)
   }
 }
 }
Index: src/game.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/game.js b/src/game.js
--- a/src/game.js	(revision a75d9e48fc1cccb1e4ffea5698c645a9b6e53786)
+++ b/src/game.js	(date 1682869449840)
@@ -28,7 +28,7 @@
 
     new EventHandler()
 
-    Game.loadMap("maps/map-01.txt")
+    Game.loadMap(1)
 
     this.camera = new Camera(this)
 
@@ -60,11 +60,11 @@
     Game.running = false
   }
 
-  static loadMap(mapfile) {
+  static loadMap(level) {
       TileRegistry.clear()
       CollisionDetector.clear()
       Game.player = null
-      Game.map = new Map(mapfile)
+      Game.map = new Map(level)
 
 
   }
@@ -86,7 +86,7 @@
       elem.textContent = 20
       alert("Das Spiel ist vorbei!")
       Game.resetMushroom()
-      Game.loadMap("maps/map-01.txt")
+      Game.loadMap(1)
     } else {
       elem.textContent= count -1
     }
Index: src/map.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/map.js b/src/map.js
--- a/src/map.js	(revision a75d9e48fc1cccb1e4ffea5698c645a9b6e53786)
+++ b/src/map.js	(date 1682869398564)
@@ -1,16 +1,15 @@
 import Game from "./game.js"
 import {
   Background,
-  FallingStone,
   Mushroom,
   Player,
   Stone,
   Tree,
   Wall,
-  Cave,
+  DummyCave,
   Flower,
   Turm,
-  FlatPlayer, JumpStone
+  FlatPlayer, JumpStone, Cave
 } from "./game_objects.js"
 
 /**
@@ -18,11 +17,16 @@
  * an den Stellen die in der Karte angegeben sind.
  */
 export default class Map {
-  constructor(mapFile) {
-    this._readMapFile(mapFile)
+  static width = 0
+  static height = 0
 
+  constructor(level) {
+    Map.width = 0
+    Map.height = 0
+    this._readMapFile(level)
+
     
-    if (mapFile==="maps/map-02.txt") {
+    if (level === 2) {
       alert("Du hast es geschafft!")
       clearInterval(Game.countdown)
       document.querySelector("#challenge").textContent = "&hearts; Challenge 2: Laufe durch den Labyrinth und sammle 10 Blumen &hearts;"
@@ -36,7 +40,7 @@
    * @param {number} y Die y-Koordinate, an der die Spiel-Objekte erstellt werden.
    * @param {string} tileType Der Buchstabe an der Stelle in der Karte.
    */
-  addTilesToMap(x, y, tileType) {
+  addTilesToMap(x, y, tileType, level) {
     new Background(x, y)
     if ( tileType === "s" ) { new Stone(x, y) }
     if ( tileType === "S" ) { new FallingStone(x, y) }
@@ -44,28 +48,28 @@
     if ( tileType === "t" ) { new Tree(x, y) }
     if ( tileType === "p" ) { new Mushroom(x, y) }
     if ( tileType === "w" ) { new Wall(x, y) }
-    if ( tileType === "h" ) { new Cave(x, y, 2) }
+    if ( tileType === "h" ) { new DummyCave(x, y) }
+    if ( tileType === "H" ) { new Cave(x, y, level+1) }
     if ( tileType === "f" ) { new Flower(x, y, ) }
     if ( tileType === "P" ) { Game.player = new Player(x, y)}
     if ( tileType === "F" ) { Game.player = new FlatPlayer(x, y)}
     if ( tileType === "T")  {new Turm (x, y)}
-    
-    
-    
   }
 
   /**
    * Liest die Karte aus der Datei und ruft die Erstellung der Spiel-Objekte auf.
    */
-  _readMapFile(filename) {
-    fetch(filename)
+  _readMapFile(level) {
+    fetch(`maps/map-0${level}.txt`)
       .then((res) => res.text())
       .then((data) => {
         let rows = data.split("\n")
         for (let y = 0; y < rows.length; y++) {
           let row = rows[y].split("")
           for (let x = 0; x < row.length; x++) {
-            this.addTilesToMap(x, y, row[x])
+            this.addTilesToMap(x, y, row[x], level)
+            Map.width = Math.max(Map.width, x)
+            Map.height = Math.max(Map.height, y)
           }
         }
       })
